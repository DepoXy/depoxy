# vim:tw=0:ts=2:sw=2:et:norl:nospell:ft=bash
# Author: Landon Bouma <https://tallybark.com/>
# Project: https://github.com/DepoXy/depoxy#🍯
# License: MIT

# CXREF: This file implicitly loaded by:
#
#   [${MR_HOME:-${HOME}}/.vim]
#   chain = true
#
# ~/.depoxy/ambers/home/_mrconfig-core

# ========================================================================
# ------------------------------------------------------------------------

[${DOPP_KIT:-${HOME}/.kit}/clang/vim]
order = 810
lib =
  remote_set publish https://github.com/landonb/vim.git
  remote_set starter https://github.com/vim/vim.git
# Don't symlink under ~/.projlns
infuseProjlns = OMR_INFUSE_PROJLNS_TOGGLE_OFF=true infuse_projlns_if_personal_project

# See also MR_INCLUDE usage gaiting mr_cat calls, below.
skip = mr_exclusive "vim" "DXC"

echoInstallHelp = echoInstallHelp 'os_linux' 'dxy_all'
# On @Linux, `vim --version` reports:
#   Compiled by ${USERNAME}@$(hostname)
# but on @macOS, reports:
#   Compiled by root@$(hostname)
isInstalled =
  test -x "${HOME}/.local/bin/vim" \
    && vim --version | grep -q -e "^Compiled by [^@]\+@$(hostname)$"
install = install_os_specific
installLinux =
  # In lieu of rebase_tip, the following.
  pull_latest "starter" "master" "" "main"
  #
  . ${SHOILERPLATE:-${HOME}/.kit/sh}/sh-git-nubs/lib/git-nubs.sh
  local base_branch="$(git_branch_name)"
  local tip_branch="tip/${base_branch}/custom-icons"
  #
  git branch -D ${tip_branch} || true
  git checkout -b ${tip_branch} \
    --track starter/master
  #
  # REFER: Custom icon (Burglar Bender): b5783d1
  git cherry-pick b5783d1ac871ca0f5b1020a57c61c0224f971c3e
  #
  mr -d ${MR_REPO} installVim

installVim =
  # Ensure `pyenv` not in effect.
  command -v pyenv > /dev/null && eval "$(pyenv init -)" && pyenv shell --unset
  #
  # Suss the --with-python3-config-dir=<path>.
  # - SAVVY/2023-04-20: `pyenv root` is, e.g., ~/.pyenv
  #   - Note that ~/.pyenv -> ~/.kit/py/pyenv/
  local pyenv_root="$(pyenv root)"
  # - Version is, e.g., 3.10.6
  local py_version="$(python3 -c "import platform; print(platform.python_version())")"
  # - Major.minor version is, e.g., 3.10
  local ver_mminor="$(
    python3 -c "import platform; print('{0}.{1}'.format(
      platform.python_version_tuple()[0],
      platform.python_version_tuple()[1])
    )")"
  local ver_major="$(
    python3 -c "import platform; print('{0}'.format(
      platform.python_version_tuple()[0])
    )")"
  # - E.g., python3
  local py3_command="python${ver_major}"
  # - Config dir is, e.g.,
  #     ~/pyenv/versions/3.10.6/lib/python3.10/config-3.10-x86_64-linux-gnu
  #
  local config_dir
  if ! os_is_macos; then
    config_dir="${pyenv_root}/versions/${py_version}/lib/python${ver_mminor}/config-${ver_mminor}-x86_64-linux-gnu"
  else
    py3_command="/usr/bin/python3"
    # DUNNO/2024-04-23 23:53: Found via `locate python-config.py`
    # /Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/Headers/Python.h
    # config_dir="/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/${ver_mminor}/lib/python${ver_mminor}/config-${ver_mminor}-darwin/"
    config_dir="/opt/homebrew/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/config-3.9-darwin"
    export vi_cv_path_python3_include="/opt/homebrew/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/include/python3.9/"
    export vi_cv_path_python3_platinclude="/opt/homebrew/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/include/python3.9/"
  fi
  #
  make clean
  make distclean
  # SAVVY/2024-04-26: Using major.minor did not work on @macOS, e.g.,:
  #     --with-python3-command=python3.10
  #   - Which is what's worked previously on @Linux.
  # - FIXME: You'll want to test that the new line, e.g.,
  #     --with-python3-command=python3
  #   works on @Linux.
  ./configure \
    --enable-luainterp=yes \
    --enable-perlinterp=yes \
    --enable-python3interp=yes \
    --with-python3-command=${py3_command} \
    --with-python3-config-dir="${config_dir}" \
    --enable-rubyinterp=yes \
    --prefix=${HOME}/.local
  make -j 3
  make install

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]
order = 250

# NOTE: Because include, [SECTION] changes to final one in file being read aloud.
# NOTE: For skip to work, these includes must come after.
#       DUNNO/2022-10-23: That the `skip` I referred to above that I don't use?

# SAVVY/2024-02-18: These files won't exist until you run `infuse`
# for the first time, because they're symlinked from ~/.depoxy/home/.vim
# so use [ -f ] tests to avoid `mr` warn-fail.

include =
  if [ -z ${MR_INCLUDE+x} ] ||
     [ "${MR_INCLUDE}" = "vim" ] ||
     [ "${MR_INCLUDE}" = "dubs-vim" ] ||
     [ "${MR_INCLUDE}" = "vim-3rdp" ] ||
     [ "${MR_INCLUDE}" = "DXC" ] ||
  false; then
    if [ -f "${HOME}/.vim/.mrconfig-3rdp" ]; then
      mr_cat ${HOME}/.vim/.mrconfig-3rdp
    fi
  fi

include =
  if [ -z ${MR_INCLUDE+x} ] ||
     [ "${MR_INCLUDE}" = "vim" ] ||
     [ "${MR_INCLUDE}" = "dubs-vim" ] ||
     [ "${MR_INCLUDE}" = "vim-dubs" ] ||
     [ "${MR_INCLUDE}" = "DXC" ] ||
     [ "${MR_INCLUDE}" = "github.com/landonb" ] ||
  false; then
    if [ -f "${HOME}/.vim/.mrconfig-dubs" ]; then
      mr_cat ${HOME}/.vim/.mrconfig-dubs
    fi
  fi

include =
  if [ -z ${MR_INCLUDE+x} ] ||
     [ "${MR_INCLUDE}" = "vim" ] ||
     [ "${MR_INCLUDE}" = "dubs-vim" ] ||
     [ "${MR_INCLUDE}" = "vim-lsp" ] ||
     [ "${MR_INCLUDE}" = "DXC" ] ||
  false; then
    if [ -f "${HOME}/.vim/.mrconfig-lsp" ]; then
      mr_cat ${HOME}/.vim/.mrconfig-lsp
    fi
  fi

# USAGE: Optional private DepoXy Client Vim projects.
# - To use, create an OMR config in your DepoXy Client, at
#     ${DEPOXYDIR_STINTS_FULL}/${DEPOXY_CLIENT_ID}/home/.vim/_mrconfig-private
#   E.g., ~/.depoxy/stints/1234/home/.vim/_mrconfig-private
#   And then `infuse` to wire it (see `seed_myrepos_mrconfig_dubs_vim`
#   in ~/.depoxy/ambers/home/infuse-dubs-vim).
# - Alternatively, you can instead create a private config under DepoXy:
#     ${DEPOXYDIR_BASE_FULL:-${HOME}/.depoxy}/ambers/home/.vim/_mrconfig-private
include =
  if [ -z ${MR_INCLUDE+x} ] ||
     [ "${MR_INCLUDE}" = "vim" ] ||
     [ "${MR_INCLUDE}" = "dubs-vim" ] ||
     [ "${MR_INCLUDE}" = "vim-private" ] ||
     [ "${MR_INCLUDE}" = "${LOGNAME}" ] ||
  false; then
    if [ -f "${HOME}/.vim/.mrconfig-private" ]; then
      mr_cat ${HOME}/.vim/.mrconfig-private
    fi
  fi

# SAVVY: End with a [DEFAULT] section because previous cat'ted file ends
#        with a [/path/to/project] section. If not, the file the cats
#        this file would have to specify [DEFAULT] again to avoid config
#        after the cat from going to [/path/to/project].
[DEFAULT]

# ========================================================================
# ------------------------------------------------------------------------

