# vim:tw=0:ts=2:sw=2:et:norl:nospell:ft=bash
# Author: Landon Bouma <https://tallybark.com/>
# Project: https://github.com/DepoXy/depoxy#üçØ
# License: MIT

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]
# CXREF: ~/.kit/git/ohmyrepos/.mrconfig-omr
include = cat "${OHMYREPOS_DIR:-${GITREPOSPATH:-${MR_HOME:-${HOME}}/.kit/git}/ohmyrepos}/.mrconfig-omr"

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]
# CXREF/2023-05-18: EAPP project boilerplate symlink and hard link infuse wiring:
#   infuse_easy_as_pypi_follower
#   update_easy_as_pypi_follower
#   onboard_easy_as_pypi_follower_2023
#     ~/.depoxy/ambers/home/.kit/git/ohmyrepos/lib/my-deps-manage-easy-as-pypi
include =
  cat "${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}/home/.kit/git/ohmyrepos/lib/my-deps-manage-easy-as-pypi"

include =
  cat "${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}/home/.kit/git/ohmyrepos/lib/my-deps-manage-shoilerplate"

# ========================================================================
# ------------------------------------------------------------------------

lib = . "${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}/home/.kit/git/ohmyrepos/lib/append-bash-completion.sh"

# CXREF: ~/.depoxy/ambers/home/.kit/git/ohmyrepos/lib/infuse-personal-projlns.sh
lib = . "${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}/home/.kit/git/ohmyrepos/lib/infuse-personal-projlns.sh"

lib = . "${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}/home/.kit/git/ohmyrepos/lib/is-remote-depoxy-client-same.sh"

lib = . "${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}/home/.kit/git/ohmyrepos/lib/macos-install-dmg.sh"

# On-demand:
#  lib = . "${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}/home/.kit/git/ohmyrepos/lib/print-homebrew-prefix.sh"

lib = . "${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}/home/.kit/git/ohmyrepos/lib/prepare-guard-repo.sh"

lib = . "${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}/home/.kit/git/ohmyrepos/lib/pyenv-shell-unset.sh"

lib = . "${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}/home/.kit/git/ohmyrepos/lib/rebase-tip.sh"

lib = . "${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}/home/.kit/git/ohmyrepos/lib/stub-checkout.sh"

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]
# CXREF:
#   update_faithful_file et al:
#     ~/.depoxy/ambers/home/.kit/git/ohmyrepos/lib/update-faithful
include =
  cat "${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}/home/.kit/git/ohmyrepos/lib/update-faithful"

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]
# spells.sh runner (commit_sorted_spells_and_alert_if_conflicts) for Vim spell file maintenance.
# CXREF: ~/.depoxy/ambers/home/.kit/git/ohmyrepos/lib/spellfile.txt-runner.sh @ 17
lib = . "${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}/home/.kit/git/ohmyrepos/lib/spellfile.txt-runner.sh"

# ========================================================================
# ------------------------------------------------------------------------

[ALIAS]
# HINT: Not necessary to alias status, as shorthand actions are inherently aliased.
#   st = status

# Alias `clone`, to be more Gitish, and less SVNny. At least from the command
# line. Internally, myrepos projects still use the `checkout` command to wire
# their git-clone operations.
clone = checkout

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]
infuseProjlns = infuse_projlns_if_personal_project

# Do not print action or directory header line.
no_print_action_infuseProjlns = true
no_print_dir_infuseProjlns = true
# Do not print if repo fails (action will do it).
#  no_print_failed_infuseProjlns = true

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]
isInstalled = true

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]

# lib =
#   skip_unless_macOS_or_checkout_or_ffssh () {
#     if ! os_is_macos; then
#       true \
#       && [ "${MR_ACTION}" != "checkout" ] \
#       && [ "${MR_ACTION}" != "ffssh" ]
#     else
#       # Check MR_INCLUDE_REMOTE
#       mr_exclusive
#     fi
#   }

lib =
  skip_unless_macOS () {
    ! os_is_macos || mr_exclusive
  }

# Usually callers would specify a list of tags, e.g.,
#   skip = mr_exclusive "python"
# but when called without args, check for special MR_INCLUDE_REMOTE
# environ. If specified, skip unless indicated remote exists.
skip = mr_exclusive

# ========================================================================
# ------------------------------------------------------------------------

