#!/bin/sh
# vim:tw=0:ts=2:sw=2:et:norl:nospell:ft=bash
# Author: Landon Bouma <https://tallybark.com/>
# Project: https://github.com/DepoXy/depoxy#🍯
# License: MIT

source_deps () {
  # Load: debug, etc.
  command -v logger.sh > /dev/null && . logger.sh ||
    . "${SHOILERPLATE:-${HOME}/.kit/sh}/sh-logger/bin/logger.sh"

  # Load: link_hard.
  command -v link-hard.sh > /dev/null && . link-hard.sh ||
    . "${OHMYREPOS_LIB:-${GITREPOSPATH:-${HOME}/.kit/git}/ohmyrepos/lib}/link-hard.sh"

  # Load: symlink_*, infuser_prepare, font_highlight.
  command -v overlay-symlink.sh > /dev/null && . overlay-symlink.sh ||
    . "${OHMYREPOS_LIB:-${GITREPOSPATH:-${HOME}/.kit/git}/ohmyrepos/lib}/overlay-symlink.sh"

  # ***

  local ambers_path="${DEPOXYDIR_BASE_FULL:-${HOME}/.depoxy}/ambers"

  # Load: link_hard_dep*.
  # - CXREF: ~/.depoxy/ambers/home/.kit/git/ohmyrepos/lib/my-deps-manage-shoilerplate.sh
  . "${DEPOXYAMBERS_DIR:-${ambers_path}}/home/.kit/git/ohmyrepos/lib/my-deps-manage-shoilerplate.sh"

  # Load: _depoxy_print_homebrew_path.
  # - CXREF: ~/.depoxy/ambers/core/brewskies.sh
  . "${DEPOXYAMBERS_DIR:-${ambers_path}}/core/brewskies.sh"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Create symlink to "private" DepoXy Bashrc:
# - Symlink:         ~/.mrinfuse/.homefries/.bashrc-bin/bashrx.private.sh
#   Which is really: ~/.depoxy/ambers/home/.homefries/.bashrc-bin/bashrx.private.sh
#   From target:     ~/.homefries/.bashrc-bin/bashrx.private.sh
# - It's not really "private", because it's publicly published from DepoXy,
#   but Homefries considers it private.
#   - But this "private" Bashrc will load your truly private Bashrc
#     from the DepoXy Client (which you likely won't publish publicly).
#     - The truly private DepoXy Client Bashrc is created from a template:
#         ~/.depoxy/ambers/archetype/home/bashrx.private.DXY_USERNAME.EVAL.sh.example
setup_private_fries_bashrc () {
  local private_bashrc=".homefries/.bashrc-bin/bashrx.private.sh"

  # This check solely because author uses a custom ~/.mrinfuse @home,
  # where they have a "bashrx.private.${LOGNAME}.sh" file instead of
  # the "bashrx.private.sh" file you'll find in DepoXy.
  if [ -f "./.mrinfuse/${private_bashrc}" ]; then
    symlink_mrinfuse_file "${private_bashrc}"
  fi
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

link_hard_dep_shoilerplate () {
  # Local directory is $HOME, just FYI. Run from Homefries's directory.
  local before_cd="$(pwd -L)"

  cd "${HOMEFRIES_DIR:-${HOME}/.homefries}"

  link_hard_dep_sh_colors

  link_hard_dep_sh_logger

  link_hard_dep_sh_pather

  link_hard_dep_sh_print_nanos_now

  link_hard_dep_sh_rm_safe

  cd "${before_cd}"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Create user home dotfile symlinks to ~/.homefries/ files, currently
# the following files:
#
#   ~/.gitmux.conf      -> .homefries/.gitmux.conf
#   ~/.profile          -> .homefries/.profile
#   ~/.tmux.conf.local  -> .homefries/.tmux.conf.local
#
# - To see just the top-level committed files in ~/.homefries, try:
#     cd ~/.homefries
#     git ls-files | sed -E 's,.*/.*,,' | sed -E '/^\s*$/d'
#
# - To see all symlinks in user home, try:
#     find ~ -maxdepth 1 -type l -printf "%f -> %l\n" | sort
#   Or:
#     ll ~ | grep " -> "

setup_public_fries_dot_files () {
  symlink_overlay_file ".homefries/.bashrc"

  # Look for home-fries home file paths.
  for hfhfpath in $(
    find "${HOMEFRIES_DIR:-${HOME}/.homefries}/" \
      -maxdepth 1 \
      -type f \
      ! -name "LICENSE" \
      ! -name "*README*" \
      ! -name ".gitignore" \
      ! -name ".ignore-example" \
  ); do
    # echo "${hfhfpath}"
    symlink_overlay_file "${hfhfpath}"
  done
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Homefries defines a `bexit` command when you run `bash` from within
# a shell, so you can easily exit subshells but not the enclosing shell.
# - Generally, you can `be<TAB>` to auto-complete `bexit`, except
#   @macos Homebrew imagemagick installs `benchmark_xl`.
#   So `bex<TAB>`? I don't think so. Rename the conflict that we don't use.
# - At least I think it's from imagemagick:
#     /opt/homebrew/bin/benchmark_xl ->
#       /opt/homebrew/Cellar/jpeg-xl/0.7.0_1/bin/benchmark_xl
setup_homefries_bexit_deconflict_imagemagick_benchmark_xl () {
  local brew_bin="$(dirname -- "$(_depoxy_print_homebrew_path)")"

  local conflict="${brew_bin}/benchmark_xl"
  local renamed="${brew_bin}/jpeg-xl--benchmark_xl"

  if [ -f "${conflict}" ]; then
    /bin/mv "${conflict}" "${renamed}"

    info " Renamed $(font_highlight "${conflict}") → $(font_highlight "${renamed}")" \
      "to avoid completion competition"
  fi
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

main () {
  set -e

  source_deps

  [ "$(basename -- "$0")" != "infuse-home-fries" ] || LOG_LEVEL=0

  # Set MR_REPO, say hello (emit $MR_REPO), and look for --switches.
  infuser_prepare "${HOME}" "$@"

  local before_cd="$(pwd -L)"
  cd "${MR_REPO}"

  setup_private_fries_bashrc

  link_hard_dep_shoilerplate

  setup_public_fries_dot_files

  setup_homefries_bexit_deconflict_imagemagick_benchmark_xl

  cd "${before_cd}"
}

# Run the infuser iff being executed.
if ! $(printf %s "$0" | grep -q -E '(^-?|\/)(ba|da|fi|z)?sh$' -); then
  main "$@"
fi

unset -f main

