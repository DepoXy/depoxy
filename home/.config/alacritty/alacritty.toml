# Author: Landon Bouma <https://tallybark.com/>
# Project: https://github.com/DepoXy/depoxy#üçØ
# License: MIT

# REFER: TOML configuration file format:
#
#   man 5 alacritty
#
# Also:
#
#   https://alacritty.org/config-alacritty.html

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

shell = "/opt/homebrew/bin/bash"

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

[font]
normal = { family = "Hack Nerd Font Mono", style = "Regular" }
size = 12.75
# See also @macOS built-in fonts, e.g.,:
#   normal = { family = "Menlo", style = "Regular" }
#   normal = { family = "Andale Mono", style = "Regular" }

# Not all emojis are correct in alacritty terminal
# https://bbs.archlinux.org/viewtopic.php?id=268110

builtin_box_drawing = true

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

[scrolling]
# Scrollback buffer: Limited to 100000. / Default: 10000
history = 100000
# Number of line scrolled for every input scroll increment. / Default: 3
#  multiplier = <integer>

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

[selection]
# TRYNG/2024-06-24: I usually dislike copy-on-select, but Alacritty clears
# the selection when you type. But I often select, type, then copy-paste,
# which does not work in Alacritty. So perhaps I'll learn to like this.
# - Well, this, or maybe I could learn to use Vi mode, too, 'v'-select
#   and 'y'ank.
save_to_clipboard = true

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

[[hints.enabled]]
# Select hyperlinks when clicked, rather than opening them (default).
#   command = "xdg-open" # On Linux/BSD
#   command = "open" # On macOS
#   command = { program = "cmd", args = [ "/c", "start", "" ] } # On Windows
#   action = "Copy" | "Paste" | "Select" | "MoveViModeCursor"
#   action = "Copy"
action = "Select"
hyperlinks = true
post_processing = true
persist = false
mouse.enabled = true
binding = { key = "U", mods = "Control|Shift" }
regex = "(ipfs:|ipns:|magnet:|mailto:|gemini://|gopher://|https://|http://|news:|file:|git://|ssh:|ftp://)[^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^‚ü®‚ü©`]+"

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

[window]
padding = { x = 1, y = 1 }
# DUNNO: No border, and no scrollbar.
#   https://github.com/alacritty/alacritty/issues/5964
# decorations = "Full"
# - SAVVY: See instead `borders` for @macOS to draw Alacritty borders.

# SAVVY: Without being told otherwise, macOS terminal apps translate
# Alt-key presses to special characters, e.g., an Alt-z injects 'Œ©'.
# - (Ok, fine, on a Mac, it's really the "Option" key, not the "Alt" key.
#   The author doesn't have an Apple keyboard (Mac Mini and mechanical
#   board, yo), so I don't quite get the nuances of the "Option" key.
#   To me it's just (should be) Alt.)
# - In any case, send Alt-key presses as Alt-key presses.
# - This is similar to the iTerm setting, "Use option as Meta key"
# - REFER: Re: `option_as_alt`:
#     https://github.com/alacritty/alacritty/issues/93
#     https://github.com/alacritty/alacritty/issues/62
#     https://github.com/search?q=repo%3Aalacritty%2Falacritty%20option_as_alt&type=code
#     `man 5 alacritty`
# "Make Option key behave as Alt."
option_as_alt = "Both"

dimensions = { columns = 169, lines = 69 }

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Be like iTerm2
# - The colors below mimic a particular iTerm2 theme
#   that the author finds easier to read (think `tig`
#   and git-diff colors, terminal prompts, any syntax
#   coloring in the terminal, etc.).

[colors]
# Be like iTerm2
# "When true, bold text is drawn using the bright color variants.
#  Default: false"
draw_bold_text_with_bright_colors = true

[colors.primary]
foreground = "#f5f5f5"
background = "#000000"

[colors.normal]
# Defaults:
#   black = "#181818"
#   red = "#ac4242"
#   green = "#90a959"
#   yellow = "#f4bf75"
#   blue = "#6a9fb5"
#   magenta = "#aa759f"
#   cyan = "#75b5aa"
#   white = "#d8d8d8"
# From iTerm2:
black = "#000000"
red = "#b83019"
green = "#51bf37"
yellow = "#c6c43d"
blue = "#3d71a6"
magenta = "#826187"
cyan = "#53c2c5"
white = "#c7c7c7"

[colors.bright]
# Defaults:
#   black = "#6b6b6b"
#   red = "#c55555"
#   green = "#aac474"
#   yellow = "#feca88"
#   blue = "#82b8c8"
#   magenta = "#c28cb8"
#   cyan = "#93d3c3"
#   white = "#f8f8f8"
# From iTerm2:
black = "#676767"
red = "#ef766d"
green = "#91d73f"
yellow = "#fefb7e"
# What iTerm2 settings say:
#   blue = "#6971f6"
# But Gimp eyedropper says different:
blue = "#84b0d9"
magenta = "#a3819f"
# What iTerm2 settings say:
#   cyan = "#8df9fd"
# But Gimp eyedropper says different:
cyan = "#25e5e9"
white = "#feffff"

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# SAVVY/2024-07-10: Use an older-Linux-friendly `TERM`.
# - Alacritty defaults to its own TERM value:
#     TERM = "alacritty"
#   - But this breaks older Linux Mint (circa 2019, but latest
#     Linux Mint circa 2024 doesn't care).
#     - E.g., `less` works, but gripes:
#         @old-linux $ less README.rst
#         WARNING: terminal is not fully functional
#         README.rst  (press RETURN)
#     - Meanwhile, `tig` won't even run:
#         @old-linux $ tig
#         Error opening terminal: alacritty.
#     Which I'd bet is because it uses an old ncurses.
# - REFER: The TERM value is really just a suggestion to some
#   apps to help them display output correctly. (Which makes
#   it weird that it outright breaks some apps, but whatever.)
#   - See `man ncurses`, `man 5 terminfo`, maybe also this article:
#     https://unix.stackexchange.com/questions/528323/what-uses-the-term-variable
# - SOLNS: There are easy ways around this:
#   - You could set the TERM when connecting to an old host:
#       $ TERM=xterm-256color ssh old-linux
#   - You could set the TERM when running an app that cares:
#       $ TERM=xterm-256color tig
#   - Or we could just set the TERM here, and forget about it.
#     - The author doesn't know of any app that behaves specially
#       when it sees 'TERM=alacritty', so we'll just make the
#       blanket change here.
#     - Note that different values will work for us, including:
#         TERM = "screen-256color"
#       But we'll pick the TERM value that iTerm uses:
#         TERM = "xterm-256color"
# - SAVVY: You must restart Alacritty for this setting to take
#   effect (it's one of the few that are not hot-reloaded).
[env]
TERM = "xterm-256color"

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

[mouse]
# An oldie, but a goodie.
#
# - Author's Vim hides mouse once you start typing...
#   so why not the terminal, too.
#
# ISOFF: While I like this behavior, it's inconsisten:
# - When I <Alt-Tab> back to Alacritty, the mouse is
#   sometimes hidden *until* I type something. Kinda
#   annoying.
#
#  hide_when_typing = true

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

[keyboard]
# REFER: Default bindings:
#   https://alacritty.org/config-alacritty-bindings.html
bindings = [
  # E.g., from docs:
  #   { key = "N", mods = "Control|Shift", action = "CreateNewWindow" },
  #   { key = "L", mods = "Control|Shift", chars = "l" },
  # CXREF: Keys:
  #   https://docs.rs/winit/latest/winit/keyboard/enum.NamedKey.html
  #   https://docs.rs/winit/latest/winit/keyboard/enum.Key.html#variant.Dead

  # ***

  # It's too easy to Quit accidentally, especially for such a simple,
  # single-modifier keybinding (the author has at least once
  # sloppy-fingered <Cmd-q> unintentionally).
  # - Also, when you have multiple windows open, it can be very annoying.
  # - SAVVY: You cannot block <Cmd-q> solely from here. It's a Menu item,
  #   so you gotta change its macOS binding, either from System Settings,
  #   or you can change it from the CLI, e.g., remap it to <Shift-Ctrl-Q>:
  #       defaults write org.alacritty NSUserKeyEquivalents '{
  #         "Quit alacritty" = "^$q";
  #       }'
  #   - Because we gotta change NSUserKeyEquivalents anyway, we won't
  #     add the new mapping here, but we'll just rely on the menu item.
  { key = "Q", mods = "Command", action = "None" },

  # `exit` is the only Close for me. (Well, that, or Quit.)
  { key = "W", mods = "Command", action = "None" },

  # ***

  # Remap <Shift-Ctrl-C/V> to Copy/Paste, which is how Linux mate-terminal
  # has done it, and how the author's brain is wired.
  # - SAVVY: This steals default Copy/Paste from <Cmd-c>/<Cmd-v>.
  #   - Except if you disable these while Alacritty is running, save,
  #     then re-enable them and save again, <Cmd-c>/<Cmd-v> then also
  #     work as copy/paste.
  { key = "C", mods = "Control|Shift", action = "Copy" },
  { key = "V", mods = "Control|Shift", action = "Paste" },

  # ***

  { key = "PageUp", mods = "Control|Shift", action = "ScrollPageUp" },
  { key = "PageDown", mods = "Control|Shift", action = "ScrollPageDown" },

  # ***

  # By default Alt-. enters "‚â•".
  # - We want readline to see it, for cycling through final argument history.
  # - *How to map . + Alt using key binding?*
  #   https://github.com/alacritty/alacritty/issues/2057
  { key = "Period", mods = "Alt", chars = "\u001b\u002e" },
  # ALTLY:
  #   { key = ".", mods = "Alt", chars = "\u001b\u002e" },

  # ***

  # Remap: Cmd-0 -> Ctrl-0
  { key = "0", mods = "Control", action = "ResetFontSize" },
  { key = "0", mods = "Command", action = "None" },
  # Remap: Cmd-= -> Ctrl-=
  { key = "=", mods = "Control", action = "IncreaseFontSize" },
  { key = "=", mods = "Command", action = "None" },
  # Remap: Cmd-- -> Ctrl--
  { key = "-", mods = "Control", action = "DecreaseFontSize" },
  { key = "-", mods = "Command", action = "None" },

  # ***

  # KLUGE: Enable <Shift-Ctrl> Vim bindings.
  # - Aka: Alacritty substitutions for terminal `vim`.
  # - CXREF: Hammerspoon substitutions for MacVim:
  #     ~/.depoxy/ambers/home/.hammerspoon/depoxy-hs.lua
  # - CXREF: Associated Vim maps:
  #     ~/.depoxy/ambers/home/.vim/pack/DepoXy/start/vim-depoxy/plugin/vim-shift-ctrl-bindings.vim
  # - SAVVY: You cannot map <C-S> bindings in Vim b/c the terminal ignores
  #   the Shift modifier when it generates a Control binding escape code.
  #   - E.g., <C-S-X> is interpreted as simply <C-X>.
  #   - We hack around this by sustituting special Unicode characters
  #     for the actual <Shift-Ctrl> keypresses.
  #   - REFER: Use characters from the Unicode Private Use Area (PUA),
  #     so they won't conflict with any characters user might generate.
  #     - "Three private use areas are defined:
  #        one in the Basic Multilingual Plane (U+E000‚ÄìU+F8FF),
  #        and one each in, and nearly covering,
  #        planes 15 and 16 (U+F0000‚ÄìU+FFFFD, U+100000‚ÄìU+10FFFD)."
  #       https://en.wikipedia.org/wiki/Private_Use_Areas
  #   - "Informally, the range U+F000 through U+F8FF is known as the
  #      Corporate Use Area."
  #   - We'll start at the low end, E000, and assign the first 26 entries
  #     to the 26 bindings, <Shift-Ctrl-A> through <Shift-Ctrl-Z>.
  #     - Though for now we only care about the two bindings we want
  #       to map in Vim:
  #       - <Shift-Ctrl-W> ‚Äî Backspace to start of line
  #                          - Complements: <Ctrl-W> Delete back word
  #       - <Shift-Ctrl-D> ‚Äî Indent
  #                          - Complements: <Ctrl-D> Dedent
  # - SAVVY: To generate the character so you can copy it, add/edit/verify
  #   the binding here, then press the associated keypress in the terminal.

  # \uE000  \uE001  \uE002  \uE003  \uE004  \uE005  \uE006  \uE007
  #   a ÓÄÄ     b ÓÄÅ     c ÓÄÇ     d ÓÄÉ     e ÓÄÑ     f ÓÄÖ     g ÓÄÜ     h ÓÄá
  # \uE008  \uE009  \uE00A  \uE00B  \uE00C  \uE00D  \uE00E  \uE00F
  #   i ÓÄà     j ÓÄâ     k ÓÄä     l ÓÄã     m ÓÄå     n ÓÄç     o ÓÄé     p ÓÄè
  # \uE010  \uE011  \uE012  \uE013  \uE014  \uE015  \uE016  \uE017
  #   q ÓÄê     r ÓÄë     s ÓÄí     t ÓÄì     u ÓÄî     v ÓÄï     w ÓÄñ     x ÓÄó
  # \uE018  \uE019
  #   y ÓÄò     z ÓÄô 
  { key = "A", mods = "Control|Shift", chars = "\uE000" },
  { key = "B", mods = "Control|Shift", chars = "\uE001" },
  # SKIPD: <Shift-Control-C> is copy (see above).
  #  { key = "C", mods = "Control|Shift", chars = "\uE002" },
  { key = "D", mods = "Control|Shift", chars = "\uE003" },
  { key = "E", mods = "Control|Shift", chars = "\uE004" },
  { key = "F", mods = "Control|Shift", chars = "\uE005" },
  { key = "G", mods = "Control|Shift", chars = "\uE006" },
  { key = "H", mods = "Control|Shift", chars = "\uE007" },
  { key = "I", mods = "Control|Shift", chars = "\uE008" },
  { key = "J", mods = "Control|Shift", chars = "\uE009" },
  { key = "K", mods = "Control|Shift", chars = "\uE00A" },
  { key = "L", mods = "Control|Shift", chars = "\uE00B" },
  { key = "M", mods = "Control|Shift", chars = "\uE00C" },
  { key = "N", mods = "Control|Shift", chars = "\uE00D" },
  { key = "O", mods = "Control|Shift", chars = "\uE00E" },
  { key = "P", mods = "Control|Shift", chars = "\uE00F" },
  # SKIPD: <Shift-Ctrl-Q> immediately exits Alacritty.
  #  { key = "Q", mods = "Control|Shift", chars = "\uE010" },
  # SKIPD: <Shift-Ctrl-R> is DepoXy Client Hammerspoon config opener. 
  #  { key = "R", mods = "Control|Shift", chars = "\uE011" },
  { key = "S", mods = "Control|Shift", chars = "\uE012" },
  { key = "T", mods = "Control|Shift", chars = "\uE013" },
  { key = "U", mods = "Control|Shift", chars = "\uE014" },
  # SKIPD: <Shift-Control-V> is paste (see above).
  #  { key = "V", mods = "Control|Shift", chars = "\uE015" },
  { key = "W", mods = "Control|Shift", chars = "\uE016" },
  { key = "X", mods = "Control|Shift", chars = "\uE017" },
  { key = "Y", mods = "Control|Shift", chars = "\uE018" },
  { key = "Z", mods = "Control|Shift", chars = "\uE019" },

  # ***

  # TRYME:
  # @macOS exclusive:
  # ToggleSimpleFullscreen
]

