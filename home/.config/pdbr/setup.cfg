# https://github.com/cansarigol/pdbr.git
#
# pdbr supplies two handy PDB functions:
#
# - inspect command `i`
#   https://github.com/Textualize/rich.git
#
# - icecream commands `ic`
#   https://github.com/gruns/icecream

[pdbr]
# Relative user home.
store_history=.pdbr_history

# "Rich's traceback, style, and theme"
use_traceback = True
# - Though I cannot find 'friendly' documented;
#   it changes `l` background.
# https://rich.readthedocs.io/en/latest/style.html#style-themes
#  python -m rich.theme
#  python -m rich.default_styles
#style = yellow
#theme = friendly
#theme = live.ellipsis
#style = red
#theme = danger


#markdown.code = black
#markdown.code_block = black
#style = black
#theme = markdown.code_block
#
#
# So confused how neither pdbr nor rich docs mention that theme
# is Pygments -- only in source did I see this mention in a
# comment where rich sets the default theme to 'monokai' (and
# that name itself rang a bell, though it's been a while).
#
# Pygments
# # List Pygments styles (rich/pdbr themes)
# python -c "from pygments.styles import get_all_styles; print(list(get_all_styles()));"
#
#['default', 'emacs', 'friendly', 'friendly_grayscale', 'colorful', 'autumn', 'murphy', 'manni', 'material', 'monokai', 'perldoc', 'pastie', 'borland', 'trac', 'native', 'fruity', 'bw', 'vim', 'vs', 'tango', 'rrt', 'xcode', 'igor', 'paraiso-light', 'paraiso-dark', 'lovelace', 'algol', 'algol_nu', 'arduino', 'rainbow_dash', 'abap', 'solarized-dark', 'solarized-light', 'sas', 'staroffice', 'stata', 'stata-light', 'stata-dark', 'inkpot', 'zenburn', 'gruvbox-dark', 'gruvbox-light', 'dracula', 'one-dark', 'lilypond', 'nord', 'nord-darker', 'github-dark']
#
# Demo w/in pdb... or not, this doesn't work...:
#   >>> #pdbr.RichPdb._theme = 'gruvbox-dark'
#   >>> l
#
#theme = gruvbox-dark

# These all look same, or at least all I saw was a white bg, next!
#theme = default
#theme = emacs
#theme = friendly
#theme = friendly_grayscale
#theme = colorful
#theme = autumn
#theme = murphy
#theme = manni
#theme = perldoc
#theme = pastie
#theme = borland
#theme = trac
#theme = bw
#theme = vs
#theme = tango
#theme = xcode
#theme = igor
# A little creamier than other styles but still whiteish bg
#theme = paraiso-light
#theme = lovelace
#theme = algol
#theme = algol_nu
#theme = arduino
#theme = rainbow_dash
#theme = abap
# Creamy bg
#theme = solarized-light
#theme = sas
#theme = staroffice
#theme = stata
#theme = stata-light
# Hideous light yello bg
#theme = gruvbox-light
#theme = lilypond

# Dark gray bgs
#theme = material
#theme = monokai
#theme = native
#theme = fruity
# Purplish bg
#theme = paraiso-dark
#theme = solarized-dark
#theme = stata-dark
#theme = inkpot
#theme = zenburn
#theme = gruvbox-dark
#theme = dracula
#theme = one-dark
#theme = nord
#theme = nord-darker
#theme = github-dark

# Black bgs
# EFYEA/2023-01-19: So glad I started tediously trying each one,
# because this 'vim' setting appears to use my vim colorscheme, seriously??
# - Okay, maybe not, but it seems really close.
# - Most importantly, it uses a truly black background, and not that
#   dark gray that's apparently so popular with syntax theme developers.
# - Comments are very dark blue and difficult if not impossible to read,
#   though...
#theme = vim
# OHBOY/2023-01-19: Glader still I kept demoing, rrt also black
# background, but uses readable comment style (color).
theme = rrt

# # │ markdown.code                 │ bright_white on black
# # │ markdown.code_block           │ dim cyan on black
# [styles]
# markdown.code = black
# markdown.code_block = black
# style = black
# theme = markdown.code_block
# #theme = danger
#
# [markdown.code_block]
# style = black
# theme = black

