# vim:tw=0:ts=2:sw=2:et:norl:nospell:ft=bash
# Author: Landon Bouma <https://tallybark.com/>
# Project: https://github.com/DepoXy/depoxy#üçØ
# License: MIT

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]
# Default order is 10.
order = 100

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]

lib =
  # Expose DEPOXY_CLIENT_ID, DEPOXYAMBERS_DIR, etc.
  source_depoxy_fs () {
    local ambers_path="${DEPOXYDIR_BASE_FULL:-${MR_HOME:-${HOME}}/.depoxy}/ambers"
    local ambers_core="${DEPOXYAMBERS_DIR:-${ambers_path}}/core"
    # CXREF: ~/.depoxy/ambers/core/depoxy_fs.sh
    . "${ambers_core}/depoxy_fs.sh"
  }
  #
  export_depoxy_fs_paths () {
    source_depoxy_fs
    # This config only runs on the client underway, and never on the
    # *primary host*, so this check should never return.
    local stints_basedir
    stints_basedir="$(_vendorfs_path_stints_basedir_print)"
    local client_name
    client_name="$(_VENDORFS_WARN_ON_ERROR=false _vendorfs_resolve_client_name_underway)" || return 0
    #
    # DUNNO/2022-10-13: Explain why you need to export these.
    export DEPOXYDIR_STINTS_FULL=${stints_basedir}
    export DEPOXY_CLIENT_ID=${client_name}
  }
  # Expose DEPOXY environs so OMR projects can use in their paths.
  # - Also sources ~/.config/depoxy/depoxyrc
  export_depoxy_fs_paths

lib =
  # Expose ONEOPEN_KEYS_PADDOCK for projects to use.
  source_321open_cfg () {
    if [ -f "${XDG_CONFIG_HOME:-${HOME}/.config}/depoxy/321open.cfg" ]; then
        # CXREF: ~/.config/depoxy/321open.cfg
      . "${XDG_CONFIG_HOME:-${HOME}/.config}/depoxy/321open.cfg"
    fi
  }
  source_321open_cfg

# ========================================================================
# ------------------------------------------------------------------------

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #
#  Home Fries (robust dotfiles)

[${HOMEFRIES_DIR:-${DOPP_KIT:-${HOME}/.kit}/sh/home-fries}]
order = 120
lib = remote_set publish "https://github.com/landonb/home-fries.git" "home-fries"
infusePostRebase =
  local ambers_path="${DEPOXYDIR_BASE_FULL:-${MR_HOME:-${HOME}}/.depoxy}/ambers"
  local infuse_home_fries="${DEPOXYAMBERS_DIR:-${ambers_path}}/home/infuse-home-fries"
  #
  . "${infuse_home_fries}"
  link_hard_dep_shoilerplate
infuse =
  # SKIPD: The 'infuse' action usually calls 'infusePostRebase', but that's
  # redundant here, b/c infuse-home-fries calls link_hard_dep_shoilerplate.
  #
  #  mr -d . -n infusePostRebase
  #
  link_private_exclude "$@"
  link_private_ignore_ "$@"
  #
  local ambers_path="${DEPOXYDIR_BASE_FULL:-${MR_HOME:-${HOME}}/.depoxy}/ambers"
  local infuse_home_fries="${DEPOXYAMBERS_DIR:-${ambers_path}}/home/infuse-home-fries"
  #
  # Rely on external infuser scripts for the rest of the setup.
  #
  # CXREF: ~/.depoxy/ambers/home/infuse-home-fries
  LOG_LEVEL=${MR_LOG_LEVEL:-${LOG_LEVEL_TRACE:-10}} \
    "${infuse_home_fries}" "$@"
updateDeps =
  # CXREF: ~/.depoxy/ambers/home/.kit/git/ohmyrepos/lib/my-deps-manage-shoilerplate.sh @ 44
  update_deps_shoilerplate
#
skip = mr_exclusive "bash" "sh" "home" "${LOGNAME}" "DXC"
#
echoInstallHelp = echoInstallHelp 'os_all' 'dxy_all'
install =
  install_bash_history_to_noise () {
    local orig_file="${HOME}/.bash_history"
    if [ -f "${orig_file}" ] && [ ! -h "${orig_file}" ]; then
      local noise_home="${NOISE_DUMP:-${HOME}/.noise}/home"
      local noise_hist="${noise_home}/.bash_history"
      #
      if [ -f "${noise_hist}" ]; then
        error "ERROR: Target already exists: ${noise_hist}"
        #
        return 1
      fi
      mkdir -p "${noise_home}"
      command mv -- "${orig_file}" "${noise_hist}"
      #
      local relative_hist="$( \
        echo "${noise_hist}" \
        | sed -E "s@^${HOME}/@@"
      )"
      command ln -s -- "${relative_hist}" "${orig_file}"
    fi
  }
  install_bash_history_to_noise

# ========================================================================
# ------------------------------------------------------------------------

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #
#  DepoXy Ambers (opinionated dev environment orchestrator)

# Note again that absolute or relative works, so
#   [${HOME}/.depoxy/ambers]
# works, as does
#   [.depoxy/ambers]
# but again we'll choose readability over "portability",
# or whatever advantage using a relative path would get us.

# The Developmer Experience üçØ
# https://github.com/DepoXy/depoxy#üçØ
[${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}]
order = 131
lib =
  remote_set publish "https://github.com/DepoXy/depoxy.git" "ambers"
skip = mr_exclusive "bash" "sh" "home" "depoxy" "entrusted" "DXC" "${LOGNAME}"
infuse =
  # Optional .gitignore.local
  link_private_exclude "$@" 2> /dev/null || true
  # Test is ~/.gitignore is tracked or not. If it is, assume user is
  # managing their own ~/.git repo. Otherwise, place our .gitignore.
  if ( cd  && ! git ls-files --error-unmatch -- ".gitignore" > /dev/null 2>&1 ); then
    if os_is_macos; then
      # Note Git ‚â•2.32.0 ignores .gitignore if symlink.
      link_hard \
        "${MR_REPO}/home/_gitignore-macOS" \
        "${HOME}/.gitignore"
    fi
  fi
  # CXREF: ~/.depoxy/ambers/home/infuse-user-home
  LOG_LEVEL=${MR_LOG_LEVEL:-${LOG_LEVEL_TRACE:-10}} \
    "${MR_REPO}/home/infuse-user-home" "$@"
  # CXREF: ~/.depoxy/ambers/home/infuse-platform-macOS
  LOG_LEVEL=${MR_LOG_LEVEL:-${LOG_LEVEL_TRACE:-10}} \
    "${MR_REPO}/home/infuse-platform-macOS" "$@"
# Force a single root deep-link, otherwise the infuser would detect the
# embedded archetype/.git repo and fallback to ls-files deep-links. But
# we also want archetype/ deep-linked. So ambers can be a root deep-link.
# - USYNC: See below: archetype/ must use TOGGLE_OFF=true because of this.
infuseProjlns = OMR_INFUSE_PROJLNS_ROOT=true infuse_projlns_if_personal_project

autocommit =
  git_auto_commit_parse_args "$@"
  git_auto_commit_one 'home/.vim/spell/en.utf-8.add--personal' -m "Update: Spells"

echoInstallHelp = echoInstallHelp 'os_all' 'dxy_all' \
  "Linux: fussy.desktop def't browser / macOS: allow term. notifs"
isInstalled = os_is_macos \
  || [ "$(xdg-settings get default-web-browser)" = "fussy.desktop" ]
install = install_os_specific
installDarwin =
  # Trigger popup so user can enable terminal toasts.
  terminal-notifier -message "‚úì Allow terminal notifications"
  # Install `updatedb` launchd background item.
  MR_REPO="${HOME}/Library/LaunchAgents" \
    symlink_mrinfuse_file "com.tallybark.daily-updatedb.plist"
  # - AFAIK, you don't need to 'bootstrap'; creating the symlink does similar?
  #     launchctl bootstrap gui/501/ "${HOME}/Library/LaunchAgents/com.tallybark.daily-updatedb.plist"
  # - Enable the service.
  #   - Note that `launchctl enable` is the new `launchctl load`.
  launchctl enable gui/501/com.tallybark.daily-updatedb
  # - Tell user what more they can/need to do:
  info "Installed \`daily-updatedb\` runner"
  info "- ALERT: You'll be prompted for a bunch for permissions on first run"
  info "- CHORE: Grant Full Disk Access to \`gfind\` via System Settings or you'll"
  info "         always be prompted to let ‚Äúgfind ... access data from other apps‚Äù"
  info "- TRYME: You can run now before waiting a day for its first scheduled run:"
  info "    launchctl kickstart gui/501/com.tallybark.daily-updatedb"
  info "- SAVVY: Run this to check the launchd item status:"
  info "    launchctl print gui/501/com.tallybark.daily-updatedb"
installLinux =
  # DUNNO/2023-02-09: Meh, not sure where else to put this...
  # - *fussy* is a Linux version of `finicky`:
  #     https://github.com/johnste/finicky
  # - This is mostly so Slack opens links in a new browser
  #   window, rather than fronting an existing window. (It's
  #   just one <Alt-w> to close the new window, vs. <Alt-w>
  #   only closing one tab and then needing to <Alt-space n>
  #   to minimize the window.)
  xdg-settings set default-web-browser "fussy.desktop"

# Let user override or extend the [~/.depoxy/ambers] config.
include =
  # CXREF: ~/.depoxy/running/home/.depoxy/ambers/_mrconfig-include
  cat "${DEPOXYDIR_RUNNING_FULL:-${HOME}/.depoxy/running}/home/.depoxy/ambers/_mrconfig-include" \
    2> /dev/null || true

# ========================================================================
# ------------------------------------------------------------------------

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #
#  Depoxy Ambers's DepoXy Archetype DepoXy Client template

# ‚ÄúWe live with our archetypes üèπ but can we live in them?‚Äù
#   https://en.wikipedia.org/wiki/Poul_Anderson
#   https://www.brainyquote.com/topics/archetypes-quotes
# DepoXy template engine üèπ
# https://github.com/DepoXy/depoxy-archetype#üèπ
[${DEPOXYDIR_BASE_FULL:-${MR_HOME:-${HOME}}/.depoxy}/ambers/archetype]
order = 132
lib =
  remote_set publish "https://github.com/DepoXy/depoxy-archetype.git" "archetype"
skip = mr_exclusive "bash" "sh" "home" "depoxy" "entrusted" "DXC" "${LOGNAME}"
infuse =
  link_private_exclude "$@"
  link_private_ignore_ "$@"
# Deep-linked inherently via ~/.depoxy/ambers, i.e., because
#     ~/.projlns/depoxy-deeplinks/home/user/.depoxy/ambers
#   is a root deep-link.
# - SAVVY: Instead of just skipping this action, e.g.,:
#     infuseProjlns = true
#   Run in the "off" position to emit a trace message.
# - USYNC: See above: ambers/ uses ROOT=true to include archetype/.
infuseProjlns = OMR_INFUSE_PROJLNS_TOGGLE_OFF=true infuse_projlns_if_personal_project

# ========================================================================
# ------------------------------------------------------------------------

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #
#  Dubs Vim (~/.vim foundation and lightweight ~/.vimrc)

[${MR_HOME:-${HOME}}/.vim]
order = 140
lib = remote_set publish "https://github.com/landonb/dubs-vim.git" ".vim"
chain = true
infusePostRebase =
  # CXREF: ~/.depoxy/ambers/home/infuse-dubs-vim
  local ambers_path="${DEPOXYDIR_BASE_FULL:-${MR_HOME:-${HOME}}/.depoxy}/ambers"
  local infuse_dubs_vim="${DEPOXYAMBERS_DIR:-${ambers_path}}/home/infuse-dubs-vim"
  #
  . "${infuse_dubs_vim}"
  setup_vim_pack_git_exclude
  setup_vim_pack_grep_ignore
infuse =
  # SKIPD: Calling infusePostRebase from this infuser is redundant.
  #  mr -d . -n infusePostRebase
  # B/c infuse-dubs-vim calls setup_vim_pack_git_exclude and setup_vim_pack_grep_ignore.
  #
  local ambers_path="${DEPOXYDIR_BASE_FULL:-${MR_HOME:-${HOME}}/.depoxy}/ambers"
  # CXREF: ~/.depoxy/ambers/home/infuse-dubs-vim
  local infuse_dubs_vim="${DEPOXYAMBERS_DIR:-${ambers_path}}/home/infuse-dubs-vim"
  #
  LOG_LEVEL=${MR_LOG_LEVEL:-${LOG_LEVEL_TRACE:-10}} \
    "${infuse_dubs_vim}" "$@"
# Don't need/want ~/.vim/.ignore (it doesn't have any rules we want,
# and one we don't want, ignoring .vim/pack).
infuseProjlns = OMR_INFUSE_PROJLNS_FILES=true infuse_projlns_if_personal_project \
  "pack/.fdignore" \
  "pack/.ignore" \
  "pack/landonb/.ignore"

# USYNC: Because 'chain', use all MR_INCLUDE values from the Vim config:
#   ~/.depoxy/ambers/home/.vim/_mrconfig
skip = mr_exclusive "vim" "dubs-vim" "vim-3rdp" "vim-dubs" \
  "github.com/landonb" "vim-lsp" "vim-private" "DXC" "${LOGNAME}"

# NOTE: The autocommit for ~/.vim/spell/en.utf-8.add
#   is within ~/.depoxy/running/.mrconfigs/_mrconfig

# Let user override or extend the [~/.vim] config.
include =
  # CXREF: ~/.depoxy/running/home/.vim/_mrconfig-vim-include
  cat "${DEPOXYDIR_RUNNING_FULL:-${HOME}/.depoxy/running}/home/.vim/_mrconfig-vim-include" \
    2> /dev/null || true

# ========================================================================
# ------------------------------------------------------------------------

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #
#  Dev Dopp Kit/ (wherein you'll find lots of cloned source projects).

[${MR_HOME:-${HOME}}/.kit]
order = 204
lib = remote_set_private
infusePostRebase =
  local ambers_path="${DEPOXYDIR_BASE_FULL:-${HOME}/.depoxy}/ambers"
  #
  # NOTE: Use _gitignore, not .gitignore, so not read from within DepoXy Ambers.
  # As of Git 2.32.0, symlinked .gitignore no longer allowed.
  #  symlink_overlay_file "${HOME}/.depoxy/ambers/home/.kit/_gitignore" ".gitignore"
  link_hard "${DEPOXYAMBERS_DIR:-${ambers_path}}/home/.kit/_gitignore" ".gitignore"
infuse =
  mr -d . -n infusePostRebase
  #
  MRT_SILENT=true link_private_exclude "$@"
  #
  # The user is more than welcome to make their own repo at ~/.kit
  # (use case: adding symlinks). We'll start them off with a so-
  # called "guard repo" until they do.
  create_guard_repo () {
    local ambers_path="${DEPOXYDIR_BASE_FULL:-${HOME}/.depoxy}/ambers"
    #
    mkdir -p "${MR_REPO}"
    #
    # .gitignore.local and .git/info/exclude symlinks are placed by DXC infuse.
    symlink_overlay_file "${DEPOXYAMBERS_DIR:-${ambers_path}}/home/.kit/README.md" "README.md"
    prepare_guard_repo
    # myrepos checkout will fails `mr: failed to determine working directory`
    # if the base path does not exist, so ensure repo parents directories exist.
    mkdir -p "${MR_REPO}/git"
    mkdir -p "${MR_REPO}/go"
    mkdir -p "${MR_REPO}/js"
    mkdir -p "${MR_REPO}/mOS"
    mkdir -p "${MR_REPO}/py"
    mkdir -p "${MR_REPO}/sh"
  }
  if ! test -d "${MR_REPO}/.git"; then
    create_guard_repo
  fi

skip = mr_exclusive "kit" "depoxy" "entrusted" "DXC" "${LOGNAME}"

# USAGE: Override these action if you want to sync this repo between hosts.
# - Create a file at ~/.depoxy/running/home/.kit/_mrconfig-kit-include
#   - It should include the actions below you want to override (or none
#     at all to accept the default action, e.g., if the same ~/.kit is
#     cloned at ~/.kit on all your hosts).
include =
  # CXREF: ~/.depoxy/running/home/.kit/_mrconfig-kit-include
  if ! cat "${DEPOXYDIR_RUNNING_FULL:-${HOME}/.depoxy/running}/home/.kit/_mrconfig-kit-include" \
    2> /dev/null \
  ; then
    cat <<[DEFAULT]
 checkout = mkdir -p "\${MR_REPO}"
 fetch = true
 update = true
 pull = true
 skip = no_travel
 ffssh = OMR_TRAVEL_BLOCKLISTED=true git_merge_ffonly_ssh_mirror "\$@"
 [DEFAULT]
  fi
[DEFAULT]
# ‚Üë Trick syntax highlighting into ending Heredoc.

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]

# ========================================================================
# ------------------------------------------------------------------------

