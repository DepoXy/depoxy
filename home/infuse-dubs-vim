#!/bin/sh
# vim:tw=0:ts=2:sw=2:et:norl:nospell:ft=bash
# Author: Landon Bouma <https://tallybark.com/>
# Project: https://github.com/DepoXy/depoxy#🍯
# License: MIT

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

MSG_PREFIX_ADDED_SYMLINKS_DIR='Created symlinks for'

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

source_deps () {
  # Load: warn, etc.
  command -v logger.sh > /dev/null && . logger.sh ||
    . "${SHOILERPLATE:-${HOME}/.kit/sh}/sh-logger/bin/logger.sh"

  # The OMR/lib modules (link-private-exclude.sh and link-private-ignore.sh)
  # expect that OMR/lib is on PATH.
  PATH="${PATH}:${OHMYREPOS_LIB:-${GITREPOSPATH:-${HOME}/.kit/git}/ohmyrepos/lib}"

  # Load: link_hard
  command -v link-hard.sh > /dev/null && . link-hard.sh ||
    . "${OHMYREPOS_LIB:-${GITREPOSPATH:-${HOME}/.kit/git}/ohmyrepos/lib}/link-hard.sh"
  # Load: link_private_exclude
  command -v link-private-exclude.sh > /dev/null && . link-private-exclude.sh ||
    . "${OHMYREPOS_LIB:-${GITREPOSPATH:-${HOME}/.kit/git}/ohmyrepos/lib}/link-private-exclude.sh"
  # Load: link_private_ignore, link_private_ignore_
  command -v link-private-ignore.sh > /dev/null && . link-private-ignore.sh ||
    . "${OHMYREPOS_LIB:-${GITREPOSPATH:-${HOME}/.kit/git}/ohmyrepos/lib}/link-private-ignore.sh"
  # Load: symlink_*, infuser_prepare, font_highlight
  command -v overlay-symlink.sh > /dev/null && . overlay-symlink.sh ||
    . "${OHMYREPOS_LIB:-${GITREPOSPATH:-${HOME}/.kit/git}/ohmyrepos/lib}/overlay-symlink.sh"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

seed_myrepos_mrconfig_dubs_vim () {
  local ambers_path="${DEPOXYDIR_BASE_FULL:-${HOME}/.depoxy}/ambers"

  # We could carnally link the config, e.g.,
  #   symlink_file_clobber "${DEPOXYAMBERS_DIR:-${ambers_path}}/home/.vim/.mrconfig"
  # But I'd rather the symlink be figured out via .mrinfuse.
  # - So the ~/.vim/.mrinfuse symlink, which symlink_mrinfuse_* expects.
  # (Note that .mrinfuse references a subdirectory of the DepoXy Ambers infuse pasture.)
  symlink_overlay_dir "${DEPOXYAMBERS_DIR:-${ambers_path}}/home/.vim" ".mrinfuse"

  symlink_mrinfuse_file "_mrconfig" ".mrconfig"
  symlink_mrinfuse_file "_mrconfig-dubs" ".mrconfig-dubs"
  symlink_mrinfuse_file "_mrconfig-3rdp" ".mrconfig-3rdp"
  symlink_mrinfuse_file "_mrconfig-lsp" ".mrconfig-lsp"

  local vim_conf_private="home/.vim/_mrconfig-private"

  # USAGE: Optional private DepoXy Client Vim projects.
  # - Place at either ~/.depoxy/running/home/.vim/_mrconfig-private
  #   Or at           ~/.depoxy/ambers/home/.vim/_mrconfig-private
  local private_conf
  for private_conf in \
    "${DEPOXYDIR_STINTS_FULL}/${DEPOXY_CLIENT_ID}/${vim_conf_private}" \
    "${ambers_path}/${vim_conf_private}" \
  ; do
    if [ -f "${private_conf}" ]; then
      symlink_mrinfuse_file "${private_conf}" ".mrconfig-private"

      break
    fi
  done
}

# ***

seed_myrepos_mrinfuse_dubs_vim_pack () {
  local ambers_path="${DEPOXYDIR_BASE_FULL:-${HOME}/.depoxy}/ambers"

  symlink_overlay_dir "${DEPOXYAMBERS_DIR:-${ambers_path}}/home/.vim/pack/.mrinfuse" "pack/.mrinfuse"
}

# ***

setup_private_git_exclude () {
  # Place ~/.vim/.gitignore.local
  #     → ~/.vim/.git/info/exclude
  #     → home/.vim/_git/info/exclude
  link_private_exclude
}

# ***

setup_vim_pack_fdignore () {
  local before_cd="$(pwd -L)"

  cd "${HOME}/.vim/pack"

  symlink_mrinfuse_file "pack/_fdignore" "pack/.fdignore"

  cd "${before_cd}"
}

# ***

# Place ~/.vim/pack/.gitignore.
setup_vim_pack_git_exclude () {
  local ambers_path="${DEPOXYDIR_BASE_FULL:-${HOME}/.depoxy}/ambers"

  # MAYBE/2023-11-11: Make `link_hard_mrinfuse_file`, akin to `symlink_mrinfuse_file`.
  # - This hard-links .gitignore (sorta like `link_private_exclude`, except that
  #   function hard-links .git/info/exclude).
  # - A `link_hard_mrinfuse_file` would let us simplify the args, e.g.,
  #     link_hard_mrinfuse_file "pack/.gitignore"
  link_hard "${DEPOXYAMBERS_DIR:-${ambers_path}}/home/.vim/pack/_gitignore" "pack/.gitignore"
}

# ***

setup_vim_pack_grep_ignore () {
  local before_cd="$(pwd -L)"

  cd "${HOME}/.vim/pack"

  link_private_ignore "pack/_ignore"

  cd "${before_cd}"
}

# ***

setup_private_grep_ignore () {
  # Place ~/.vim/.ignore.
  link_private_ignore_
}

# ***

# Link ~/.vimrc → ~/.vim/.vimrc
wire_home_vimrc () {
  local before_cd="$(pwd -L)"

  cd "${HOME}"

  symlink_overlay_file ".vim/.vimrc" ".vimrc"

  cd "${before_cd}"
}

# ***

infuse_this_infuser () {
  local ambers_path="${DEPOXYDIR_BASE_FULL:-${HOME}/.depoxy}/ambers"

  symlink_overlay_file "${DEPOXYAMBERS_DIR:-${ambers_path}}/home/infuse-dubs-vim" "infuse"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

populate_run_generator () {
  local symldir="$1"

  # E.g., pack/landonb/start/dubs_file_finder/cmdt_paths/generate_links.sh
  local generator="${symldir}/generate_links.sh"

  if ! [ -f "${generator}" ]; then
    # Possible on very first infuse, before ~/.vim/.mrconfig* wired (that
    # is, user must `mr clone`-`mr infuse`-`mr clone`-`mr infuse`!).

    warn "Missing symlink generator: $(font_highlight "${generator}")"
    warn "- Please run \`mr -d / clone\` again, then re-infuse"

    return 0
  fi

  info " Running symlink generator: $(font_highlight "${generator}")…"

  ${generator} > /dev/null

  info " ${MSG_PREFIX_ADDED_SYMLINKS_DIR} $(font_highlight "${symldir}/")"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# CXREF:
#   ~/.vim/pack/landonb/start/dubs_file_finder/plugin/dubs_file_finder.vim
setup_private_plug_file_dubs_file_finder () {
  [ -d "${HOME}/.vim/pack/landonb/start/dubs_file_finder" ] || return 0

  local before_cd="$(pwd -L)"

  cd "${HOME}/.vim/pack/landonb/start/dubs_file_finder"

  # HSTRY/2024-05-08: Previously used generate_links.sh at
  #   ~/.depoxy/ambers/home/.vim/cmdt_paths/
  # to populate a custom find-file project, and infuse would
  # symlink that path:
  #
  #   symlink_overlay_dir "${HOME}/.vim/.mrinfuse/cmdt_paths"
  #
  # But now we just use the uber project under ~/.projlns

  # CXREF:
  #   ~/.depoxy/ambers/home/.projlns/infuse-projlns-core.sh
  local dxy_projlns="${DEPOXY_PROJLNS:-${HOME}/.projlns}"
  local dxy_deeplns="${DEPOXY_PROJLNS_DEPOXY:-${dxy_projlns}/depoxy-deeplinks}"

  # SAVVY: rg ignores .ignore rule from same directory as target if
  # that target would create a file system loop, e.g.,:
  #
  #   rg: File system loop found:
  #     /home/user/.projlns/depoxy-deeplinks/home/user/_vim/pack/landonb/start/dubs_file_finder/cmdt_paths
  #   points to an ancestor /home/user/.projlns/depoxy-deeplinks
  #
  # So put cmdt_paths 1 deep.
  mkdir -p "_cmdt_paths"
  cd "_cmdt_paths"

  symlink_overlay_dir "${dxy_deeplns}" "cmdt_paths"

  cd "${before_cd}"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# dubs_cuts is searched on #9 search (aka #9 grep aka #9 grep-steady).

populate_dubs_cuts_generate () {
  # MEH/2019-10-27: This infuser takes a hot second to run (possibly
  # because I could not make the script POSIX-compliant, or more likely
  # because of the for-loop on find with regex).

  # Run the Dubs Vim dubs_cuts infuser, i.e., execute:
  #   ~/.depoxy/ambers/home/.vim/dubs_project_tray/generate_links.sh
  # to populate:
  #   ~/.depoxy/ambers/home/.vim/dubs_project_tray/dubs_cuts/
  # aka:
  #  "${HOME}/.vim/.mrinfuse/dubs_project_tray/dubs_cuts"
  # upon which setup_private_plug_file_dubs_project_tray_symlink_dubs_cuts
  # depends.
  populate_run_generator ".mrinfuse/dubs_project_tray"
}

# ***

setup_private_plug_file_dubs_project_tray_symlink_dubs_cuts () {
  [ -d "${HOME}/.vim/pack/landonb/start/dubs_project_tray" ] || return 0

  local before_cd="$(pwd -L)"

  cd "${HOME}/.vim/pack/landonb/start/dubs_project_tray"

  symlink_overlay_dir "${HOME}/.vim/.mrinfuse/dubs_project_tray/dubs_cuts"

  cd "${before_cd}"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

setup_project_plug_vim_depoxy () {
  local ambers_path="${DEPOXYDIR_BASE_FULL:-${HOME}/.depoxy}/ambers"

  local depoxy_vim_org="DepoXy"

  mkdir -p "${HOME}/.vim/pack/${depoxy_vim_org}/start"

  local before_cd="$(pwd -L)"

  # ***

  cd "${HOME}/.vim/pack/${depoxy_vim_org}"

  # FIXME/2024-02-21: Verify this ignore file, b/c its paths look like
  # they're from perspective of ~/.vim/pack, and not ~/.vim/pack/DepoXy.
  symlink_overlay_file \
    "${DEPOXYAMBERS_DIR:-${ambers_path}}/home/.vim/pack/${depoxy_vim_org}/_ignore" \
    ".ignore"

  # ***

  cd "./start"

  symlink_overlay_dir \
    "${DEPOXYAMBERS_DIR:-${ambers_path}}/home/.vim/pack/${depoxy_vim_org}/start/vim-depoxy" \
    "vim-depoxy"

  # ***

  local fzf_vim="${DOPP_KIT:-${HOME}/.kit}/go/fzf/plugin/fzf.vim"

  if [ -e "${fzf_vim}" ]; then
    cd "./vim-depoxy/plugin"

    symlink_overlay_file "${fzf_vim}" "fzf.vim"
  fi

  # ***

  cd "${before_cd}"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

setup_project_plug_vim_landonb () {
  local ambers_path="${DEPOXYDIR_BASE_FULL:-${HOME}/.depoxy}/ambers"

  local landonb_vim_org="landonb"

  mkdir -p "${HOME}/.vim/pack/${landonb_vim_org}"

  local before_cd="$(pwd -L)"

  # ***

  cd "${HOME}/.vim/pack/${landonb_vim_org}"

  symlink_overlay_file \
    "${DEPOXYAMBERS_DIR:-${ambers_path}}/home/.vim/pack/${landonb_vim_org}/_ignore" \
    ".ignore"

  # ***

  cd "${before_cd}"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

setup_private_coc_config () {
  symlink_mrinfuse_file "coc-settings.json"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# REFER: Run Vim without vimrc, run :Helptags, run :quit:
#          -u {vimrc}      Don't load the vimrc
#          -c {command}    Execute {command}
setup_vim_generate_helptags () {
  vim -u NONE -c "Helptags" -c q
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

main () {
  set -e

  source_deps

  [ "$(basename -- "$0")" != "infuse-dubs-vim" ] || LOG_LEVEL=0

  # Set MR_REPO, say hello (emit $MR_REPO), and look for --switches.
  infuser_prepare "${HOME}/.vim" "$@"

  local before_cd="$(pwd -L)"
  cd "${MR_REPO}"

  # ***

  seed_myrepos_mrconfig_dubs_vim

  seed_myrepos_mrinfuse_dubs_vim_pack

  setup_private_git_exclude

  setup_vim_pack_fdignore

  setup_vim_pack_git_exclude

  setup_vim_pack_grep_ignore

  setup_private_grep_ignore

  wire_home_vimrc

  infuse_this_infuser

  # ***

  setup_private_plug_file_dubs_file_finder

  # ***

  setup_project_plug_vim_depoxy

  setup_project_plug_vim_landonb

  # ***

  # Setup Coc's config.

  setup_private_coc_config

  # ***

  setup_vim_generate_helptags

  # ***

  # It might take a few-ten secs to populate
  #   ~/.depoxy/ambers/home/.vim/dubs_project_tray/dubs_cuts/
  # so call last, to make debugging previous calls quicker.
  populate_dubs_cuts_generate
  setup_private_plug_file_dubs_project_tray_symlink_dubs_cuts

  # ***

  cd "${before_cd}"
}

# Run the infuser iff being executed.
if ! $(printf %s "$0" | grep -q -E '(^-?|\/)(ba|da|fi|z)?sh$' -); then
  main "$@"
fi

unset -f main

